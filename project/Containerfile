# Build stage
FROM golang:1.24-alpine AS builder

ARG COMMIT_SHA
ARG COMMIT_TAG

WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the Go app (static binary)
RUN CGO_ENABLED=0 GOOS=linux go build \
  -ldflags "-X main.COMMIT_SHA=${COMMIT_SHA} -X main.COMMIT_TAG=${COMMIT_TAG}" \
  -o server main.go app.go

# Create a cache directory for the app. Possibly can be replaced with a volume
RUN mkdir -p /app/cache

# Final stage: distroless
# Possibly can be replaced with FROM scratch
FROM gcr.io/distroless/static-debian12
USER 1000:1000
ENV GIN_MODE=release


WORKDIR /app

COPY --from=builder /app/server .
COPY --from=builder --chown=1000:1000 /app/cache /app/cache
COPY --from=builder /app/templates /app/templates


# Run the binary
ENTRYPOINT ["/app/server"]
